/* Generated By:JavaCC: Do not edit this line. TrcGrammarConstants.java */
package trcGrammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TrcGrammarConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BREAKLINE = 1;
  /** RegularExpression Id. */
  int COMENTARIO_UMA_LINHA = 7;
  /** RegularExpression Id. */
  int LETRA = 8;
  /** RegularExpression Id. */
  int DIGITO = 9;
  /** RegularExpression Id. */
  int OR = 10;
  /** RegularExpression Id. */
  int AND = 11;
  /** RegularExpression Id. */
  int NOT = 12;
  /** RegularExpression Id. */
  int EXISTS = 13;
  /** RegularExpression Id. */
  int FORALL = 14;
  /** RegularExpression Id. */
  int LPAREN = 15;
  /** RegularExpression Id. */
  int RPAREN = 16;
  /** RegularExpression Id. */
  int LBRACE = 17;
  /** RegularExpression Id. */
  int RBRACE = 18;
  /** RegularExpression Id. */
  int LESSTHAN = 19;
  /** RegularExpression Id. */
  int LESSOREQUALTHAN = 20;
  /** RegularExpression Id. */
  int GREATERTHAN = 21;
  /** RegularExpression Id. */
  int GREATEROREQUALTHAN = 22;
  /** RegularExpression Id. */
  int EQUALS = 23;
  /** RegularExpression Id. */
  int NOTEQUALS = 24;
  /** RegularExpression Id. */
  int INTEIRO_LITERAL = 25;
  /** RegularExpression Id. */
  int STRING_LITERAL = 26;
  /** RegularExpression Id. */
  int TRUEVALUE = 27;
  /** RegularExpression Id. */
  int FALSEVALUE = 28;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 29;
  /** RegularExpression Id. */
  int DOT = 30;
  /** RegularExpression Id. */
  int MEIODAQUERY = 31;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<BREAKLINE>",
    "\" \"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "\"\\n\"",
    "<COMENTARIO_UMA_LINHA>",
    "<LETRA>",
    "<DIGITO>",
    "\"OR\"",
    "\"AND\"",
    "\"NOT\"",
    "\"EXISTS\"",
    "\"FORALL\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "<NOTEQUALS>",
    "<INTEIRO_LITERAL>",
    "<STRING_LITERAL>",
    "\"TRUE\"",
    "\"FALSE\"",
    "<IDENTIFICADOR>",
    "\".\"",
    "\"|\"",
  };

}
